## Add fomula and p value
legend("topleft",bty = "n",cex=0.75,lty = 1,
col = c("brown","seagreen4","snow4"),
legend = c(paste("∆Observed GPP =",round(summary(mod_Obs)$coefficients[2,1],4)," ± ",
round(summary(mod_Obs)$coefficients[2,2],4),", p=",
round(summary(mod_Obs)$coefficients[2,4],4),sep = ""),
paste("∆Post-SoilMois GPP =",round(summary(mod_Simu)$coefficients[2,1],4)," ± ",
round(summary(mod_Simu)$coefficients[2,2],4),", p=",
round(summary(mod_Simu)$coefficients[2,4],4),sep = ""),
paste("∆Pre-SoilMois GPP =",round(summary(mod_Simu0)$coefficients[2,1],4)," ± ",
round(summary(mod_Simu0)$coefficients[2,2],4),", p=",
round(summary(mod_Simu0)$coefficients[2,4],4),sep = "")
))
## Comparison GPP data
plot(FLUX$Year,FLUX$BE.Bra,main="Observation - Post_soilmois",col="brown",cex=0.8,
xlim = c(2004,2011),
ylim=c(1000,2000),
pch=4,xlab = "Year",ylab = expression(paste("GPP (gC ",m^-2," ",yr^-1,")")))
points(data[[2]]$Year,data[[2]]$annual_gpp, pch=11,col="seagreen4", cex.main=0.8,cex=0.8)
abline(mod_Obs,lwd=1, col="brown")
abline(mod_Simu,lwd=1, col="seagreen4")
## Add Legend
legend("bottomright",legend=c("Observed","Pre_SoilMois","Pre_SoilMois"),
cex = 0.9,bty = "n",
text.col=c("brown","seagreen4","snow4"),
pch=c(4,11,5),col=c("brown","seagreen4","snow4"))
rm(list = ls())
gpp_8216 <- read.csv("/Users/wenjia/OneDrive - Imperial College London/PhD results/trendy_v6/comparison_1982_2016.csv")
View(gpp_8216)
View(gpp_8216)
library(mblm)
gpp_8216 <- read.csv("/Users/wenjia/OneDrive - Imperial College London/PhD results/trendy_v6/comparison_1982_2016.csv")
mod_CTEM <- mblm(CLASS_CTEM_S2~year,data=gpp_8216)
View(mod_CTEM)
summary(mod_CTEM)
View(gpp_8216)
rm(list = ls())
library(mblm)
gpp_8216 <- read.csv("/Users/wenjia/OneDrive - Imperial College London/PhD results/trendy_v6/comparison_1982_2016.csv")
mod8216 <- matrix(0,nrow = 36,ncol = 32)
names(mod8216) <- names(gpp_8216)
mod_CTEMS1 <- mblm(CLASS_CTEM_S1~year,data=gpp_8216)
View(mod8216)
mod8216 <- as.data.frame(mod8216)
names(mod8216) <- names(gpp_8216)
View(mod8216)
gpp_8216$year <- seq(1982,2016)
View(mod8216)
rm(list = ls())
library(mblm)
gpp_8216 <- read.csv("/Users/wenjia/OneDrive - Imperial College London/PhD results/trendy_v6/comparison_1982_2016.csv")
mod8216 <- matrix(0,nrow = 36,ncol = 32)
mod8216 <- as.data.frame(mod8216)
names(mod8216) <- names(gpp_8216)
mod8216$year <- seq(1982,2016)
mod8216$year[1:35] <- seq(1982,2016)
mod_CABLES1 <- mblm(CABLE_S1~year,data=gpp_8216)
mod8216$CABLE_S1[1:35] <- mod_CABLES1$fitted.values
View(mod8216)
summary(mod_CABLES1)$coeffient[2,1]
summary(mod_CABLES1)$coefficients[2,1]
View(mod_CABLES1)
summmary(mod_CABLES1)
summary(mod_CABLES1)
names(gpp_8216)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(mod8216)
source('~/.active-rstudio-document', echo=TRUE)
View(mod8216)
View(gpp_8216)
for (i in 2:36) {
mod8216[37,i] <- mean(gpp_8216[1:35,i])
}
source('~/.active-rstudio-document', echo=TRUE)
write.csv("/Users/wenjia/OneDrive - Imperial College London/PhD results/trendy_v6/mod_8216.csv",row.names = F)
write.csv(mod8216,"/Users/wenjia/OneDrive - Imperial College London/PhD results/trendy_v6/mod_8216.csv",row.names = F)
################# THIS SCRIPT PLOT THE TREND OF GPP OF TRENDY DATASET AND P MODEL ############################
library(ggplot2)
library(ggthemes)
rm(list = ls())
trend <- read.csv("/Users/wenjia/Desktop/PhD/Research/paper/TRENDY_COS_trend_20th.csv")
p <- ggplot(data = trend, aes(x=Model,y=Trend,fill=Scenario)) +
geom_bar(stat = "identity",position = "dodge",width = 0.7) +
theme_hc() +
scale_fill_hc() +
ylim(0,0.36) +
labs(x="Model",y="Trend",title = "Annual trend of GPP based on TRENDY-v6 and COS analysis") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
p <- ggplot(data = trend, aes(x=Model,y=Trend,fill=Scenario)) +
geom_bar(stat = "identity",position = "dodge",width = 0.7) +
theme_hc() +
scale_fill_hc() +
ylim(0,0.36) +
xlab(bquote('Trend ('* gC~yr^-2')')) +
labs(x="Model",title = "Annual trend of GPP based on TRENDY-v6 and COS analysis") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
ylab <- paste("Trend (",expression('g'*'C'~'y'*'r'^-2))
ylab <- paste("Trend (",expression('g'*'C'~'y'*'r'^-2),")",sep ="" )
################# THIS SCRIPT PLOT THE TREND OF GPP OF TRENDY DATASET AND P MODEL ############################
library(ggplot2)
library(ggthemes)
rm(list = ls())
trend <- read.csv("/Users/wenjia/Desktop/PhD/Research/paper/TRENDY_COS_trend_20th.csv")
ylab <- paste("Trend (",expression('g'*'C'~'y'*'r'^-2),")",sep ="" )
p <- ggplot(data = trend, aes(x=Model,y=Trend,fill=Scenario)) +
geom_bar(stat = "identity",position = "dodge",width = 0.7) +
theme_hc() +
scale_fill_hc() +
ylim(0,0.36) +
# xlab(bquote('Trend ('* gC~yr^-2')')) +
labs(x="Model",y=ylab, title = "Annual trend of GPP based on TRENDY-v6 and COS analysis") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
p <- ggplot(data = trend, aes(x=Model,y=Trend,fill=Scenario)) +
geom_bar(stat = "identity",position = "dodge",width = 0.7) +
theme_hc() +
scale_fill_hc() +
ylim(0,0.36) +
# xlab(bquote('Trend ('* gC~yr^-2')')) +
labs(x="Model",y=expression(paste("Trend (gC ", 'y'*'r'^-2)), title = "Annual trend of GPP based on TRENDY-v6 and COS analysis") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
################# THIS SCRIPT PLOT THE TREND OF GPP OF TRENDY DATASET AND P MODEL ############################
library(ggplot2)
library(ggthemes)
rm(list = ls())
trend <- read.csv("/Users/wenjia/Desktop/PhD/Research/paper/TRENDY_COS_trend_20th.csv")
p <- ggplot(data = trend, aes(x=Model,y=Trend,fill=Scenario)) +
geom_bar(stat = "identity",position = "dodge",width = 0.7) +
theme_hc() +
scale_fill_hc() +
ylim(0,0.36) +
# xlab(bquote('Trend ('* gC~yr^-2')')) +
labs(x="Model",y=expression(paste("Trend (gC ", 'y'*'r'^-2,")")), title = "Annual trend of GPP based on TRENDY-v6 and COS analysis") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
################# THIS SCRIPT PLOT THE TREND OF GPP OF TRENDY DATASET AND P MODEL ############################
library(ggplot2)
library(ggthemes)
rm(list = ls())
trend <- read.csv("/Users/wenjia/Desktop/PhD/Research/paper/TRENDY_COS_trend_20th.csv")
p <- ggplot(data = trend, aes(x=Model,y=Trend,fill=Scenario)) +
geom_bar(stat = "identity",position = "dodge",width = 0.7) +
theme_hc() +
scale_fill_hc() +
ylim(0,0.36) +
# xlab(bquote('Trend ('* gC~yr^-2')')) +
labs(x="Model",y="Increase (%)", title = "GPP increase based on TRENDY-v6 and COS analysis over 1900-2000") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
install.packages("rpmodel")
??rpmodel
help(rpmodel)
library(rpmodel)
??rpmodel\
??rpmodel
rpmodel::usage
out_pmodel <- rpmodel(
tc             = 20           # temperature, deg C
vpd            = 1000         # Pa,
co2            = 400          # ppm,
elv            = 0            # m.a.s.l.,
kphio          = 0.05         # quantum yield efficiency,
beta           = 146,         # unit cost ratio a/b,
fapar          = 1            # fraction  ,
ppfd           = 300          # mol/m2/d,
method_optci   = "prentice14",
method_jmaxlim = "none",
do_ftemp_kphio = FALSE
)
print( out_pmodel )
out_pmodel <- rpmodel(
tc             = 20,           # temperature, deg C
vpd            = 1000,         # Pa,
co2            = 400,          # ppm,
elv            = 0,            # m.a.s.l.,
kphio          = 0.05,         # quantum yield efficiency,
beta           = 146,         # unit cost ratio a/b,
fapar          = 1,            # fraction  ,
ppfd           = 300,          # mol/m2/d,
method_optci   = "prentice14",
method_jmaxlim = "none",
do_ftemp_kphio = FALSE
)
print( out_pmodel )
out_pmodel$gpp
rm(list = ls())
rm(list = ls());
setwd("/Users/wenjia/Desktop/PhD/20190415_C4/Global/code_20190703")
source("Constant_global_20190905.R");
source("viscosity_190905.R")
source("density_h2o_190905.R")
rm(list = ls());
setwd("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/code_20190703")
source("Constant_global_20190905.R");
source("viscosity_190905.R")
source("density_h2o_190905.R")
fn <- dir("/Users/wenjia/Desktop/PhD/20190415_C4/Global/SPLASH_result")
fn <- dir("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_result")
# read data csv file
my_co2ppm <- read.csv("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/co2_monthly_82_16.csv",header = F)
my_elv <- read.csv("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/elevation/ele_map.csv",header = F)
my_c4_percent <- read.csv("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/c4_percent_map.csv",header = F)
f=1
my_Rad <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/ppfd/map_convert_unit/",fn[f],sep = ""),header = F)
my_ppfd <- my_Rad * kfFEC * (1.0e-3);
my_tc <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Tmp/convert_map/",fn[f],sep = ""),header = F)
my_Tmax <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Tmx/convert_map/",fn[f],sep = ""),header = F)
my_Tmin <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Tmn/convert_map/",fn[f],sep = ""),header = F)
my_vap <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Vap/convert_map/",fn[f],sep = ""),header = F)
my_fAPAR <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/fAPAR/after_merging/",fn[f],sep = ""),header = F)
my_soil_stress <- read.csv(paste("/Users/wenjia/Desktop/PhD/20190415_C4/Global/SPLASH_result/",fn[f],sep = ""),header = F)
co2ppm <- my_co2ppm$V2[f]
my_k_temp <- my_tc+273.15; #convert from degree to kelvin
# Initiate results
gpp <- matrix(rep(0,259200),nrow = 360,ncol = 720)
my_soil_stress <- read.csv(paste("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_result/",fn[f],sep = ""),header = F)
co2ppm <- my_co2ppm$V2[f]
my_k_temp <- my_tc+273.15; #convert from degree to kelvin
# Initiate results
gpp <- matrix(rep(0,259200),nrow = 360,ncol = 720)
for (d_row in 1:nrow(gpp)) {
for (d_col in 1:ncol(gpp)) {
# Initiate data to calculate
elv <- my_elv[d_row,d_col]
ppfd <- my_ppfd[d_row,d_col]
tc <- my_tc[d_row,d_col]
Tmax <- my_Tmax[d_row,d_col]
Tmin <- my_Tmin[d_row,d_col]
vap <- my_vap[d_row,d_col]
fAPAR <- my_fAPAR[d_row,d_col]
c4_percent <- my_c4_percent[d_row,d_col]
soil_stress <- my_soil_stress[d_row,d_col]
k_temp <- my_k_temp[d_row,d_col]
if (anyNA(c(elv,ppfd,tc,Tmax,Tmin,vap,fAPAR,c4_percent))!=T) {
print(d_row,d_col)
}
}
}
d_row
d_col
my_c4_percent[60,58]
which(my_c4_percent!=0)
my_c4_percent[35343]
35343/720
35343-49*720
my_c4_percent[50,63]
my_c4_percent[63,50]
View(my_c4_percent)
a = as.array(my_c4_percent)
a = as.vector(my_c4_percent)
a = as.matrix(my_c4_percent,nrow=1)
View(a)
a = matrix(my_c4_percent,nrow=1)
a[3,5]
View(a)
which(a!=0)
which(a[[5!=0)
which(a[[5]]!=0)
35343/360
35343-98*360
my_c4_percent[63,99]
which(my_c4_percent==1)
47633/360
47633-132*360
my_c4_percent[113,133]
output <- rpmodel(
tc = tc,
vpd = vpd,
co2 = co2ppm,
fapar = fAPAR,
ppfd = ppfd,
elv = elv,
method_optci   = "prentice14",
method_jmaxlim = "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE
)
vap_elev <- vap * (p/kPo)
es1 <- es0 * exp((17.27 * Tmax)/(Tmax+273.3))
vpd1_hpa <- (es1 - 0.1 * vap_elev) * 10 # kPa --> hPa
es2 <- es0 * exp((17.27 * Tmin)/(Tmin+273.3))
# Initiate data to calculate
elv <- my_elv[d_row,d_col]
ppfd <- my_ppfd[d_row,d_col]
tc <- my_tc[d_row,d_col]
Tmax <- my_Tmax[d_row,d_col]
Tmin <- my_Tmin[d_row,d_col]
vap <- my_vap[d_row,d_col]
fAPAR <- my_fAPAR[d_row,d_col]
c4_percent <- my_c4_percent[d_row,d_col]
soil_stress <- my_soil_stress[d_row,d_col]
k_temp <- my_k_temp[d_row,d_col]
vap_elev <- vap * (p/kPo)
# Begin calculation
# Calculate the pressure of given elevation
p <- kPo*(1 - kL*elv/kTo)^(kG*kMa/(kR*kL));
pw <- density_h2o(tc,p)
mu <- viscosity_h2o(tc,p)
# ************************************************************************
# Calculate vpd under given temperature and vapour pressure
# Tmax_min <- (8.635 * (Tmax + Tmin))/(0.5 * (Tmax + Tmin) + 237.3)
# vpd_hpa <- (es0 * exp(Tmax_min) - (0.10 * vap)) * 10. # kPa --> hPa
vap_elev <- vap * (p/kPo)
es1 <- es0 * exp((17.27 * Tmax)/(Tmax+273.3))
vpd1_hpa <- (es1 - 0.1 * vap_elev) * 10 # kPa --> hPa
es2 <- es0 * exp((17.27 * Tmin)/(Tmin+273.3))
vpd2_hpa <- (es2 - 0.1 * vap_elev) * 10 # kPa --> hPa
vpd_hpa <- (vpd1_hpa + vpd2_hpa)/2 #calculating vpd by average the two
vpd <- vpd_hpa * 100 # convert to Pa
tc <- k_temp - 273.15
output <- rpmodel(
tc = tc,
vpd = vpd,
co2 = co2ppm,
fapar = fAPAR,
ppfd = ppfd,
elv = elv,
method_optci   = "prentice14",
method_jmaxlim = "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE
)
output <- rpmodel(
tc = tc,
vpd = vpd,
co2 = co2ppm,
fapar = fAPAR,
ppfd = ppfd,
elv = elv,
method_optci   = "prentice14",
method_jmaxlim = "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE
verhose = TRUE
)
output <- rpmodel(
tc = tc,
vpd = vpd,
co2 = co2ppm,
fapar = fAPAR,
ppfd = ppfd,
elv = elv,
method_optci   = "prentice14",
method_jmaxlim = "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE,
verhose = TRUE
)
output <- rpmodel(
tc = tc,
vpd = vpd,
co2 = co2ppm,
fapar = fAPAR,
ppfd = ppfd,
elv = elv,
method_optci   = "prentice14",
method_jmaxlim = "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE
)
output$gpp
install.github("dsval/rsplash")
install_github("dsval/rsplash")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages(usethis)
install.packages("usethis")
install.packages("usethis")
library(devtools)
install.packages("rlang")
library(devtools)
library(usethis)
library(devtools)
install_github("dsval/rsplash")
library(rsplash)
??rspalsh
rm(list=ls())
library(data.table)
ele <- read.csv("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_data/ele.csv")
grass_cover <- read.csv("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_data/grassland_cover.csv",header = F)
fn <- dir("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_data/SW_IN")
i = fn[1]
# Initiate source SPLASH data
SW_IN_pathway <- paste("/Users/wenjia/Desktop/PhD/20190415_C4/Global/SPLASH_data","SW_IN",i,sep = "/")
my_SW_IN <- fread(SW_IN_pathway)
# Initiate source SPLASH data
SW_IN_pathway <- paste("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_data","SW_IN",i,sep = "/")
Tair_pathway <- paste("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_data","Tair",i,sep = "/")
Pre_pathway <- paste("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_data","Pre",i,sep = "/")
my_SW_IN <- fread(SW_IN_pathway)
my_Tair <- fread(Tair_pathway)
my_Tair[355,34]
rsplash::splash.grid(swin=swin,tc=tc,pn=pn,elev=elev,soil = g_cover,output.mode = "monthly")
rsplash::run_one_year(lat = lat,sw_in = swin,tc=tc,pn=pn,elev=elev,y=1982)
rsplash::run_one_year(lat = lat,sw_in = sw_in,tc=tc,pn=pn,elev=elev,y=1982)
j=1
start_year <- as.double(substr(i,1,4))
end_year <- start_year
sw_in <- t(my_SW_IN[j,])
tc <- (t(my_Tair[j,]))-273.15
pn <- t(my_Pre[j,])
lat <- ele$Var2[j]
elev <- ele$pre.mat[j]
my_Pre <- fread(Pre_pathway)
pn <- t(my_Pre[j,])
lat <- ele$Var2[j]
elev <- ele$pre.mat[j]
g_cover <- grass_cover[(361-ceiling(j/720)),((j-1)%%720+1)]
rsplash::run_one_year(lat = lat,sw_in = sw_in,tc=tc,pn=pn,elev=elev,y=start_year)
rm(list = ls());
setwd("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/code_20190703")
source("Constant_global_20190905.R");
source("viscosity_190905.R")
source("density_h2o_190905.R")
fn <- dir("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_result")
# read data csv file
my_co2ppm <- read.csv("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/co2_monthly_82_16.csv",header = F)
my_elv <- read.csv("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/elevation/ele_map.csv",header = F)
my_c4_percent <- read.csv("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/c4_percent_map.csv",header = F)
for (f in 1:420) {
my_Rad <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/ppfd/map_convert_unit/",fn[f],sep = ""),header = F)
my_ppfd <- my_Rad * kfFEC * (1.0e-3);
my_tc <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Tmp/convert_map/",fn[f],sep = ""),header = F)
my_Tmax <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Tmx/convert_map/",fn[f],sep = ""),header = F)
my_Tmin <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Tmn/convert_map/",fn[f],sep = ""),header = F)
my_vap <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/Vap/convert_map/",fn[f],sep = ""),header = F)
my_fAPAR <- read.csv(paste("/Volumes/兔子/研究生学习/Projects/20180620_global/Data/fAPAR/after_merging/",fn[f],sep = ""),header = F)
my_soil_stress <- read.csv(paste("/Users/wenjia/Desktop/PhD/Research/20190415_C4/Global/SPLASH_result/",fn[f],sep = ""),header = F)
co2ppm <- my_co2ppm$V2[f]
my_temp <- my_tc # in degree
# Initiate results
gpp <- matrix(rep(0,259200),nrow = 360,ncol = 720)
# Initiate data to calculate
# co2ppm <- my_co2ppm$V2[my_co2ppm$V1==substr(fname,1,6)]
for (d_row in 1:nrow(gpp)) {
for (d_col in 1:ncol(gpp)) {
# Initiate data to calculate
elv <- my_elv[d_row,d_col]
ppfd <- my_ppfd[d_row,d_col]
tc <- my_tc[d_row,d_col]
Tmax <- my_Tmax[d_row,d_col]
Tmin <- my_Tmin[d_row,d_col]
vap <- my_vap[d_row,d_col]
fAPAR <- my_fAPAR[d_row,d_col]
c4_percent <- my_c4_percent[d_row,d_col]
soil_stress <- my_soil_stress[d_row,d_col]
k_temp <- my_k_temp[d_row,d_col]
if (anyNA(c(elv,ppfd,tc,Tmax,Tmin,vap,fAPAR,c4_percent))==T) {
gpp[d_row,d_col] <- NA
} else {
# Begin calculation
# Calculate the pressure of given elevation
p <- kPo*(1 - kL*elv/kTo)^(kG*kMa/(kR*kL));
pw <- density_h2o(tc,p)
mu <- viscosity_h2o(tc,p)
# ************************************************************************
# Calculate vpd under given temperature and vapour pressure
# Tmax_min <- (8.635 * (Tmax + Tmin))/(0.5 * (Tmax + Tmin) + 237.3)
# vpd_hpa <- (es0 * exp(Tmax_min) - (0.10 * vap)) * 10. # kPa --> hPa
vap_elev <- vap * (p/kPo)
es1 <- es0 * exp((17.27 * Tmax)/(Tmax+273.3))
vpd1_hpa <- (es1 - 0.1 * vap_elev) * 10 # kPa --> hPa
es2 <- es0 * exp((17.27 * Tmin)/(Tmin+273.3))
vpd2_hpa <- (es2 - 0.1 * vap_elev) * 10 # kPa --> hPa
vpd_hpa <- (vpd1_hpa + vpd2_hpa)/2 #calculating vpd by average the two
vpd <- vpd_hpa * 100 # convert to Pa
output <- rpmodel(
tc = tc,
vpd = vpd,
co2 = co2ppm,
fapar = fAPAR,
ppfd = ppfd,
elv = elv,
method_optci   = "prentice14",
method_jmaxlim = "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE
)
gpp[d_row,d_col] <- output$gpp
}
}
}
report <- paste(fn[f],"is finished", Sys.time())
print(report)
out_file <- paste("/Users/wenjia/Desktop/Beni_gpp/mon_gpp/",fn[f],sep = "")
write.table(gpp,out_file,sep = ",",na="NaN",row.names = F,col.names = F)
}
source('~/Desktop/PhD/Research/20190415_C4/Global/code_20190703/cal_GPP_global_20200322_beni.R', echo=TRUE)
library(rpmodel)
source('~/Desktop/PhD/Research/20190415_C4/Global/code_20190703/cal_GPP_global_20200322_beni.R', echo=TRUE)
source('~/Desktop/PhD/Research/20190415_C4/Global/code_20190703/cal_GPP_global_20200322_beni.R', echo=TRUE)
source('~/Desktop/PhD/Research/20190415_C4/Global/code_20190703/cal_GPP_global_20200322_beni.R', echo=TRUE)
source('~/Desktop/PhD/Research/20190415_C4/Global/code_20190703/cal_GPP_global_20200322_beni.R', echo=TRUE)
